[{"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\index.js":"1","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\App.js":"2","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\reportWebVitals.js":"3","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\firebase.js":"4","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\ProgressBar\\ProgressBar.js":"5","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\DragAndDrop\\DragAndDrop.js":"6","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\UploadPreview\\UploadPreview.js":"7","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\CompressionSlider\\CompressionSlider.js":"8","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\Message\\Message.js":"9"},{"size":500,"mtime":1607012501540,"results":"10","hashOfConfig":"11"},{"size":720,"mtime":1607246043183,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":532,"mtime":1607271514731,"results":"14","hashOfConfig":"11"},{"size":186,"mtime":1607271312602,"results":"15","hashOfConfig":"11"},{"size":2776,"mtime":1607269208331,"results":"16","hashOfConfig":"11"},{"size":781,"mtime":1607253039017,"results":"17","hashOfConfig":"11"},{"size":572,"mtime":1607271279813,"results":"18","hashOfConfig":"11"},{"size":154,"mtime":1607266544304,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hubffu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\index.js",[],["40","41"],"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\App.js",[],"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\reportWebVitals.js",[],"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\firebase.js",[],"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\ProgressBar\\ProgressBar.js",[],"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\DragAndDrop\\DragAndDrop.js",["42"],"import React, { useState } from \"react\";\r\nimport { storageRef } from \"../../firebase\";\r\n\r\nimport { UploadPreview } from \"../UploadPreview/UploadPreview\";\r\nimport { Message } from \"../Message/Message\";\r\nimport UploadIllustration from \"../../assets/image-upload.svg\";\r\n\r\nimport \"./DragAndDrop.css\";\r\n\r\nexport const DragAndDrop = ({ dispatch, data }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleDragEnter = (event) => {\r\n    event.preventDefault();\r\n    dispatch({ type: \"AddToDropZone\", inDropZone: true });\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"copy\";\r\n    dispatch({ type: \"AddToDropZone\", inDropZone: true });\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n\r\n    const supportedFileTypes = [\"image/jpeg\", \"image/png\"];\r\n    const { type } = event.dataTransfer.files[0];\r\n\r\n    if (supportedFileTypes.indexOf(type) > -1) {\r\n      let files = [...event.dataTransfer.files];\r\n      let files_with_preview = [];\r\n\r\n      files.map((file) => {\r\n        file[\"preview\"] = URL.createObjectURL(file);\r\n        files_with_preview.push(file);\r\n        const uploadTask = storageRef.child(`images/${file.name}`).put(file);\r\n\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setProgress(progress);\r\n          },\r\n\r\n          (error) => {\r\n            console.log(error);\r\n            setMessage(\"An error has occurred. Please reload and try again.\");\r\n          }\r\n        );\r\n      });\r\n\r\n      if (files) {\r\n        dispatch({ type: \"AddToList\", files });\r\n        dispatch({ type: \"AddToDropZone\", inDropZone: false });\r\n      }\r\n    } else {\r\n      setMessage(\"Please upload an a .png or .jpg file.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"upload-wrapper\">\r\n        <h1>Upload Media</h1>\r\n        <div\r\n          className=\"upload-container\"\r\n          onDrop={(event) => handleDrop(event)}\r\n          onDragOver={(event) => handleDragOver(event)}\r\n          onDragEnter={(event) => handleDragEnter(event)}\r\n        >\r\n          <img\r\n            src={UploadIllustration}\r\n            alt=\"upload-illustration\"\r\n            className=\"illustration\"\r\n          />\r\n          <p>\r\n            Drag and drop <span>images</span> here.\r\n          </p>\r\n        </div>\r\n        <Message message={message} />\r\n      </div>\r\n\r\n      <div className=\"upload-file-list\">\r\n        {data.fileList.map((file) => {\r\n          return <UploadPreview progress={progress} file={file} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\UploadPreview\\UploadPreview.js",[],"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\CompressionSlider\\CompressionSlider.js",[],"C:\\Users\\Smeagol\\Desktop\\react-media-upload\\src\\components\\Message\\Message.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":35,"column":24,"nodeType":"49","messageId":"50","endLine":35,"endColumn":26},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]